- name: Find configured pools
  shell: ls /etc/php/*/fpm/pool.d/*.conf
  changed_when: False
  register: php_fpm_current_pools

# Requires Jinja2 2.11 to be installed to use map(..,default=)
- name: Remove invalid pools
  file:
    path: "{{ item }}"
    state: absent
  when: >
    item | regex_replace('/etc/php/([0-9\\.]*)/.*', '\\1') not in
    php_fpm_pools | selectattr('name', 'match', item | basename | regex_replace('.conf$', '')) | map(attribute='version', default=php_fpm_default_version) | list
  with_items: "{{ php_fpm_current_pools.stdout_lines }}"
  register: php_fpm_remove_pool

- name: Create pool configurations
  template: >
    src=pool.conf.j2
    dest=/etc/{{ 'php/' + item.version | default(php_fpm_default_version) }}/fpm/pool.d/{{ item.name }}.conf
  with_items: "{{ php_fpm_pools }}"
  register: php_fpm_pool_create_results
  when: php_fpm_pools|lower != 'none' and (item.state | default()) != 'absent'

- name: Remove absent pools
  file: path=/etc/{{ 'php/' + item.version | default(php_fpm_default_version) }}/fpm/pool.d/{{ item.name }}.conf state=absent
  with_items: "{{ php_fpm_pools }}"
  when: php_fpm_pools|lower != 'none' and (item.state | default()) == 'absent'
  register: php_fpm_pool_remove_results

- name: Make sure run directory exists
  file: path=/run/php state=directory owner=www-data group=www-data

- name: Backup php.ini once
  copy:
    src: /etc/{{ 'php/' + item }}/fpm/php.ini
    dest: /etc/{{ 'php/' + item }}/fpm/php.ini.orig
    force: no
    remote_src: yes
  with_items: "{{ php_fpm_installed_versions | default([php_fpm_default_version]) }}"

- name: Set php.ini options for specific versions
  ini_file:
    dest: /etc/{{ 'php/' + item.1 }}/fpm/php.ini
    section: "{{ item.0.section }}"
    option: "{{ item.0.option }}"
    value: "{{ item.0.value }}"
    state: "{{ item.0.state | default('present') }}"
  when: item.1 in php_fpm_installed_versions
  with_subelements:
    - "{{ php_fpm_ini }}"
    - versions
    - {'skip_missing': True}
  register: php_fpm_ini_specific_versions_result

- name: Set php.ini options for all versions
  ini_file:
    dest: /etc/{{ 'php/' + item.1 }}/fpm/php.ini
    section: "{{ item.0.section }}"
    option: "{{ item.0.option }}"
    value: "{{ item.0.value }}"
    state: "{{ item.0.state | default('present') }}"
  register: php_fpm_ini_all_versions_result
  with_nested:
    - "{{ php_fpm_ini }}"
    - "{{ php_fpm_installed_versions|default([php_fpm_default_version]) }}"
  when: item.0.versions is not defined

- name: Ensure users exist
  user: name={{ item.user }} shell={{ php_fpm_user_shell|default(omit) }}
  with_items: "{{ php_fpm_pools }}"
  when: php_fpm_pools|lower != 'none' and (item.state | default()) != 'absent'

- name: Ensure opcache dir exists and can be written to by pool user
  file: path={{ item["php_admin_value[opcache.file_cache]"] }} state=directory mode=700 owner={{ item.user }} group={{ item.group }}
  with_items: "{{ php_fpm_pools }}"
  when: item["php_admin_value[opcache.file_cache]"] is defined

- name: Restart php-fpm if necessary (stopping)
  service: name=php{{ item }}-fpm state=stopped
  with_items: "{{ (((php_fpm_pool_create_results.results | selectattr('changed') | map(attribute='dest') | list +
                  php_fpm_pool_remove_results.results | selectattr('changed') | map(attribute='path') | list +
                  php_fpm_remove_pool.results | selectattr('changed') | map(attribute='path') | list)|
                  map('regex_replace', '/etc/php/([0-9\\.]*)/fpm.*', '\\1') | list) +
                  ((php_fpm_ini_specific_versions_result.results | selectattr('changed') | map(attribute='item.1') | list +
                  php_fpm_ini_all_versions_result.results | selectattr('changed') | map(attribute='item.1') | list)|
                  list)) | unique }}"

- name: Start php-fpm
  service: name=php{{ item }}-fpm state=started
  with_items: "{{ php_fpm_installed_versions | default([php_fpm_default_version]) }}"
